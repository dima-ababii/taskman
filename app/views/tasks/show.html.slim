.container-fluid
  .row
    .col-lg-6.offset-lg-3
      => link_to 'Back', tasks_path
      
      p
        strong Title:
        '
        = @data[:task].title
      p
        strong Description:
        '
        = @data[:task].description
      p
        strong File:
        '
        - if @data[:task].file_name
          = link_to @data[:task].file_name, download_task_path(@data[:task])
          
      p
        - if @data[:is_assign]
          = link_to 'Unassign', unassign_task_path(@data[:task])
        - else
          = link_to 'Assign', assign_task_path(@data[:task])
      
      - if @data[:is_assign]
        p
          strong Show current state:
          '
          = @data[:curret_state]
          
        p
          strong States:
          '
          = link_to 'New', change_state_tasks_path(@data[:task], 'new'), method: :post
          '
          = link_to 'In Progress', change_state_tasks_path(@data[:task], 'in_progress'), method: :post
          '
          = link_to 'Finished', change_state_tasks_path(@data[:task], 'finished'), method: :post
          
        p
          '
          - existing_task_result = TaskResult.find_by(user: @data[:current_user], task: @data[:task])
          - if existing_task_result.nil?
            = link_to 'Create new answer', new_task_result_path(task_id: @data[:task].id)
          - else
            = link_to 'Edit answer', edit_task_result_path(existing_task_result)
            = link_to 'Show answer', task_result_path(existing_task_result)
            
      h3
        | Assigned Users
        '
      table.table.table-sm.table-striped.table-bordereds
        thead
          tr
            th Email
            th Name
            th State
            
        tbody
          - @data[:assign_users].each do |user|
            tr
              td = user.email
              td = "#{user.last_name} #{user.first_name}"
              td
                - assigned_task = TasksUser.find_by(user: user, task: @data[:task], unassigned_at: nil)
                = assigned_task&.state
